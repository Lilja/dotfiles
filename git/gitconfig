[include]
	# Load the local gitconfig containing information about the user.
	path = .gitconfig.local

[alias]
	# Tree output of commits for current branch.
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit

	# Lazy shortcuts
	st          = status
	co          = checkout
	br          = branch
	ci          = commit
	brv         = branch -v
	brva        = branch -va
	cont        = rebase --continue
	ff          = merge --ff-only
	ffpull      = pull --ff-only

	# Pushes forcefully but with --force-with-lease instead of -f which checks the remote ref compared to local
	friendly-force  = "!git push origin CURRENT_BRANCH_NAME --force-with-lease"

	# Create a temporary commit and push to current branch
	temp-commit = "!git add -u && git ci -m \"Trash commit\" && git push origin CURRENT_BRANCH_NAME"

	# -p removes outdated remote branches.
	# It basically does `git remote prune origin`
	pfetch = fetch --prune

	# Read as remove from staging
	unstage = reset HEAD

	# Read as diff-cached
	diffc = diff --cached

	# Creating fast snapshots for the current dirty files.
	snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"

	# See contributors of a repo, sorted on amount of commits
	# Cred to @flygare
	contributors = shortlog --summary --numbered

	# Delete branches which have been merged
	delete-merged-branches = "!f() { git checkout --quiet master && git branch --merged | grep --invert-match '\\*' | xargs -n 1 git branch --delete; git checkout --quiet @{-1}; }; f"

[diff]
	tool=vimdiff

[push]
	default = current

[core]
	# Vim is my editor
	editor = vim

	# Global gitignore file
	excludesfile = ~/.gitignore_global

	# Set diff so that a tab is 4 char length
	pager = less -x1,5

[color]
	# Add some color to your everyday life
	ui = auto
	diff = auto
	branch = auto
	interactive = auto
	status = auto

[color "branch"]
	current = white
	local = yellow
	remote = green
